{\n}
# Gradle plugin usage{\n}
{\n}
{\n}
Include the plugin and simply run:{\n}
{\n}
`gradle projectFilestatistics`{\n}
{\n}
This will parse the files in the directory and outputs statistics about the project.{\n}
{\n}
### For all versions of gradle - you may use the following to apply the plugin{\n}
{\n}
```{\n}
buildscript {{{\n}
{\t}repositories {{{\n}
{\t}{\t}maven {{{\n}
{\t}{\t}{\t}url "https://plugins.gradle.org/m2/"{\n}
{\t}{\t}}{\n}
{\t}}{\n}
{\t}dependencies {{{\n}
{\t}{\t}classpath "gradle.plugin.synapticloop.project-filestatistics:project-filestatistics:{version}"{\n}
{\t}}{\n}
}{\n}
{\n}
apply plugin: "synapticloop.project-filestatistics"{\n}
{\n}
```{\n}
### if you are using gradle >= 2.1 - you may use the shorthand format to apply the plugin{\n}
{\n}
```{\n}
plugins {{{\n}
{\t}id 'synapticloop.project-filestatistics' version '{version}'{\n}
}{\n}
```{\n}
{\n}
### Defaults{\n}
{\n}
By default the plugin looks for a `documentr.json` file in the current directory, 
you may override this by doing the following:{\n}
{\n}
```{\n}
documentrSetting {{{\n}
{\t}directory = '../some/directory/'{\n}
{\t}verbose = 'false'{\n}
{\t}extension = 'md' // this is the default{\n}
{\t}// extension = 'adoc' // perhaps you want asciidoc?{\n}
}{\n}
```{\n}
{\n}
{\n}
Note that this will generate the `README.md` file in the same directory (i.e. `../some/directory/README.md`){\n}
{\n}
The `verbose` setting will output the pre-parsed and rendered templar template 
to the console{\n}
{\n}
### Java command line usage{\n}
{\n}
simply run{\n}
{\n}
{\n}
```{\n}
java -jar {archivesBaseName}-{version}-all.jar{\n}
```{\n}
{\n}
By default this will generate the `README.md` file looking at the current 
directory for a `documentr.json` file.{\n}
{\n}
{\n}
Running:{\n}
{\n}
```{\n}
java -jar {archivesBaseName}-{version}-all.jar --help{\n}
```{\n}
{\n}
Will yield the following information:{\n}
{\n}
{\n}